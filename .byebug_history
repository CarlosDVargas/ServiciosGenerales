continue
@feedback.valid?
 @feedback = Feedback.new(observations: feedback_params.values[0], satisfaction: params[:satisfaction], request_id: feedback_params.values[1]
continue
params[:satisfaction]
params[:feedback]
params
@feedback = Feedback.new(feedback_params)
@feedback
@feedback.valid?
continue
params
continue
@request
continue
@request = Request.find(params[:request_id])
continue
@request = Request.find(params[:request_id])
params
continue
exit
params
continue
params
continue
params
continue
@feedback = Feedback.new(feedback_params)
continue
exit
params
@feedback = Feedback.new(feedback_params)
continue
@feedback = Feedback.new(feedback_params)
continue
@request
continue
params
continue
params
exit
cance
params
continue
next
@employees
next
continue
params
status
continue
params
status
continue
params
continue
params
continue
params
status
continue
params
continue
params
params.valid?
params.valid
params.error
params.errors
params
continue
params
continue
@employee.tasks
@employee.methods
@employee = Employee.find_by(user_account: current_user_account)
next
continue
exit
@rdr.valid?
@rdr
@rdr.request = @request
@rdr
@rdr.user_account = current_user_account
@rdr
@rdr.reason = "R1"
@rdr = RequestDenyReason.new()
exit
clear
@rdr.user_account = current_user_account
@rdr
@rdr.user_id = 1
@rdr
@rdr.reason = "R1"
@rdr = RequestDenyReason.new()
@rdr = RequestDenyReason.new(reason: deny_reasons.first[:reason], user_id: current_user_account, request: @request)
@rdr
@rdr.user_id 
@rdr.user_id => 1
@rdr
@rdr.user_id = 1
@rdr.update(:user_id current_user_account.id)
@rdr.error
@rdr.valid?
@rdr.valid
@rdr
@rdr.user_id = 1
@rdr
@rdr.user_id = @user_id
@user_id = current_user_account.id
@rdr = RequestDenyReason.new(reason: deny_reasons.first[:reason], user_id: current_user_account.id, request: @request)
RequestDenyReason.new(reason: deny_reasons.first[:reason], user_id: current_user_account.id, request: @request)
RequestDenyReason.new(reason: deny_reasons.first, user_id: current_user_account.id, request: @request)
@request
current_user_account.id
deny_reasons.first[:reason]
deny_reasons[:reason]
deny_reasons
params
continue
params
next
continue
next
RequestDenyReason.all
next
continue
params[:request][:request_deny_reasons_attributes].values
params[:request][:request_deny_reasons_attributes]
continue
next
params
continue
contiue
params
params[:request]
params[:request][:deny_reasons]
continue
params[:request][:deny_reasons]
params[:request]
params
continue
params
continue
params
continue
next
continue
params
continue
params
continue
continur
next
params
next
params
continue
next
continue
params[:task][:request_id]
params[:task]
params[[:task]]
params[[:task][:request_id]]
params[[task][:request_id]]
params[:request_id]
params
continue
next
@employees
next
params
continue
@employee.employee_status
@employee.employee_status == 1
@employee.employee_status = 1
@employee.employee_status == 1
@employee = @employees.first
@employees.all
@employees
continue
next
params
continue
params
continue
next
continue
next
params
continue
params[:employee][:user_accounts]
params[:employee]
params[:user_accounts][:name]
params[:user_accounts]
continue
params[:user_accounts]
params[:user_account]
params
continue
params
continue
next
params
continue
Employee.new(params.require(:employee).permit(:employee_id_card, :employee_status, :user_id, :employee_mail, :employee_name))
continue
Employee.new(params.require(:employee).permit(:employee_id_card, :employee_status, :user_id, :employee_mail, :employee_name))
continue
Employee.new(params.require(:employee).permit(:employee_id_card, :employee_status, :user_id, :employee_mail, :employee_name))
continue
Employee.new(params.require(:employee).permit(:employee_id_card, :employee_status, :user_id, :employee_mail, :employee_name))
params.require(:employee).permit(:employee_id_card, :employee_status, :user_id, :employee_mail, :employee_name)
params[:employee][:employee_status].to_i
params[:employee][:employee_status]
params[:employee][:employee_id]
params
continue
next
continue
@user.valid?
next
continue
@user.errors
@user.valid?
@user
next
continue
@user
next
continue
@user
@user.valid?
next
continue
next
continue
next
@user.valid?
@user
next
continue
params
continue
@requests.first.nil?
@requests.first
@requests.methods
@requests.nil?
@requests
continue
@requests
continue
@request.valid?
continue
@request.requester_type 
@request.requester_type = 'student'
@request.requester_type = student
